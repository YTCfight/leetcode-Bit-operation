 //整数替换
 int ReplaceInteger(int input)
 {
	 int count = 0;
	 while (input != 1)
	 {
		 if (input == 3)
		  {
			  return count + 2;
		  }
		 else if ((input & 1) == 0)
		 {
			 input=input >> 1;
		 }
		 else if ((input & 2) == 2)
		 {
			 input += 1;
		 }
		 else
		 {
			 input -= 1;
		 }
		 count++;
	 }
	 return count;
 }
 int main()
 {
	 int input = 0;
	 scanf("%d", &input);
	 int ret = ReplaceInteger(input);
	 printf("%d\n", ret);
	 system("pause");
	 return 0;
 }



 public int integerReplacement(int n) {
        int count = 0;
     while (n!=1){
            //与运算判断最后一位来区分奇偶
            if((n & 1) == 0){
                //偶数直接无符号右移，例如2147483647 会被奇数处理算法加一溢出为符数，
                //若选用带符号右移将无法回到1.
                n >>>=1;
                count++;
            }
            else {
                //识别奇数的上一位是否为1，即 以 10 结尾(xxxx01)还是以11结尾(xxxx11)
                if((n & 2) == 0){
                    //01结尾最优则应当 用 n -1 取代 n
                    n -= 1;
                    count++;
                }else {
                    //11结尾除3这个特殊情况外，其余选用 n + 1取代 n，原因如上
                    if(n == 3){
                        //3的特殊性处理，原因如上
                        count+=2;break;
                    }else {
                        n += 1;
                    }
                    count++;
                }
            }
        }
        return count;
    }
